Titre du Projet : Utilitaire de Re-Patching DMX pour Projets QLC+

1. Objectif Principal :
Développer une application web légère et conviviale pour simplifier la modification de l'adressage DMX des fixtures (appareils d'éclairage) dans les fichiers de projet QLC+ (extension .qxw). L'application permettra de visualiser, modifier et valider les adresses DMX directement dans le fichier XML du projet, en contournant les limitations de l'interface de QLC+ concernant les conflits d'adresses temporaires.

2. Problème Adressé :
QLC+ ne permet pas d'assigner à une fixture des adresses qui entrent en conflit, même temporairement, avec les adresses d'une autre fixture. Cela rend des opérations simples, comme l'inversion des adresses de deux fixtures, fastidieuses car elles nécessitent l'utilisation d'adresses temporaires via l'interface de QLC+. Cet utilitaire vise à modifier directement le fichier XML pour définir l'état final souhaité, sans conflits.

3. Fonctionnalités Clés de l'Application :

Chargement de fichier : Permettre à l'utilisateur de charger un fichier de projet QLC+ (.qxw) depuis son ordinateur.
Analyse XML : Parser le fichier XML pour extraire les informations des fixtures.
Affichage des Fixtures : Présenter une liste claire des fixtures avec leurs informations actuelles : Nom, ID (non modifiable), Univers DMX, Adresse DMX actuelle, Nombre de canaux.
Modification des Adresses : Permettre à l'utilisateur de saisir une nouvelle adresse DMX pour chaque fixture.
Validation en temps réel (ou avant sauvegarde) :
Vérifier que les nouvelles adresses sont dans la plage valide (ex: 1-512).
Détecter et signaler tout conflit d'adressage (chevauchement des plages de canaux) au sein d'un même univers DMX. Deux fixtures dans des univers différents peuvent avoir la même adresse.
Mise à jour XML : Modifier en mémoire la structure XML avec les nouvelles adresses validées.
Téléchargement du fichier modifié : Permettre à l'utilisateur de télécharger le fichier .qxw mis à jour, qu'il pourra ensuite ouvrir dans QLC+.
4. Technologies Proposées :

Application web côté client uniquement (pas de backend serveur).
HTML : Pour la structure de la page (interface utilisateur).
CSS : Pour la mise en forme et le style.
JavaScript (ES6+) : Pour toute la logique :
Manipulation du DOM (Document Object Model).
API FileReader pour lire le fichier local.
API DOMParser pour analyser le XML.
Algorithmes de validation des adresses.
Génération de la chaîne XML modifiée.
API Blob et création d'un lien de téléchargement pour sauvegarder le fichier.
5. Structure des Données (Éléments XML QLC+ pertinents) :
L'application se concentrera sur les éléments <Fixture> dans le fichier QLC+, typiquement situés sous <Workspace><Engine>.
Pour chaque <Fixture> :

<ID> : Identifiant unique de la fixture (doit rester inchangé).
<Name> : Nom de la fixture (pour affichage).
<Universe> : Numéro de l'univers DMX (base 0). Crucial pour la validation des conflits.
<Address> : Adresse DMX de départ de la fixture (la valeur à modifier).
<Channels> : Nombre de canaux DMX utilisés par la fixture (nécessaire pour calculer la plage d'adresses : Address à Address + Channels - 1).
6. Workflow Utilisateur :

L'utilisateur ouvre la page web de l'application.
Il clique sur un bouton "Charger un fichier QLC+" et sélectionne son fichier .qxw.
Les fixtures et leurs informations sont affichées (par exemple, dans un tableau).
L'utilisateur modifie les adresses DMX souhaitées dans les champs prévus.
L'application valide les entrées (idéalement en temps réel ou via un bouton "Valider"). Les conflits sont signalés.
Une fois les modifications valides, l'utilisateur clique sur un bouton "Enregistrer et Télécharger".
Le fichier .qxw modifié est téléchargé sur l'ordinateur de l'utilisateur.
7. Points d'Attention / Demandes Spécifiques pour l'Agent Cursor (Exemples) :

Aide pour la mise en place de la structure HTML de base (champ d'upload, tableau pour les fixtures, boutons).
Assistance pour le code JavaScript permettant de :
Lire et parser le fichier XML sélectionné par l'utilisateur.
Peupler dynamiquement un tableau HTML avec les données des fixtures.
Récupérer les nouvelles adresses saisies par l'utilisateur.
Implémenter l'algorithme de détection de conflit d'adresses DMX par univers (tenant compte du nombre de canaux de chaque fixture).
Mettre à jour les nœuds <Address> dans l'objet XML en mémoire.
Sérialiser l'objet XML modifié en une chaîne de caractères.
Initier le téléchargement du fichier XML résultant.
Conseils sur la gestion des erreurs (ex: fichier non XML, XML mal formé).
Suggestions pour une interface utilisateur claire et intuitive.